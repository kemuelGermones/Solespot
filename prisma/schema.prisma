generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  orders        Order[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Image {
  id       String      @id @default(cuid())
  name     String
  url      String      @unique
  products Thumbnail[]
}

model Product {
  id          String      @id @default(cuid())
  name        String
  price       Decimal     @db.Decimal(10, 2)
  brand       String
  category    String
  gender      String
  size        String
  description String
  about       String
  createdAt   DateTime    @default(now())
  stock       Stock?
  orders      Order[]
  images      Thumbnail[]
}

model Order {
  id         String    @id @default(cuid())
  userId     String
  productId  String
  isPaid     Boolean
  orderedAt  DateTime  @default(now())
  receivedAt DateTime?

  user    User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  product Product @relation(fields: [productId], references: [id])
}

model Stock {
  quantity  Int
  productId String

  product Product @relation(fields: [productId], references: [id])

  @@id([productId])
}

model Thumbnail {
  productId String
  imageId   String
  sequence  Int

  product Product @relation(fields: [productId], references: [id])
  image   Image   @relation(fields: [imageId], references: [id])

  @@id([productId, imageId])
}
